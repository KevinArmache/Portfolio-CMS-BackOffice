{"version":3,"sources":["Components/Form/Form.jsx","Components/Projects/Projects.jsx","App.js","index.js"],"names":["Form","useState","Github","setGithub","Cloudinary","setCloudinary","onSubmit","e","preventDefault","fetch","process","method","body","JSON","stringify","headers","Accept","htmlFor","type","name","value","onChange","target","Projects","data","GetId","setGetId","useEffect","TheId","setTheId","NewGithub","setNewGithub","NewCloudinary","setNewCloudinary","className","map","element","index","src","cloudinary","alt","href","github","onClick","id","App","Project","setProject","then","response","json","catch","err","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bc4c493.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./Form.scss\";\n\nfunction Form() {\n  const [Github, setGithub] = useState(\"\");\n  const [Cloudinary, setCloudinary] = useState(\"\");\n  const submit = (e) => {\n    e.preventDefault();\n    fetch(`${process.env.REACT_APP_POST}`, {\n      method: \"POST\",\n      body: JSON.stringify({ Github, Cloudinary }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\n      },\n    });\n  };\n\n  return (\n    <form onSubmit={submit}>\n      <label htmlFor=\"Github\">Github</label> <br />\n      <input\n        type=\"Github\"\n        name=\"Github\"\n        value={Github}\n        onChange={(e) => setGithub(e.target.value)}\n      />\n      <br />\n      <label htmlFor=\"Cloudinary\">Cloudinary</label> <br />\n      <input\n        type=\"Cloudinary\"\n        name=\"Cloudinary\"\n        value={Cloudinary}\n        onChange={(e) => setCloudinary(e.target.value)}\n      />\n      <br />\n      <button type=\"submit\">Send it!</button>\n    </form>\n  );\n}\nexport default Form;\n","import { useState, useEffect } from \"react\";\nimport \"./Projects.scss\";\n\nfunction Projects(data) {\n  const [GetId, setGetId] = useState(\"\");\n\n  function handleClick(id) {\n    setGetId(id);\n  }\n  useEffect(() => {\n    fetch(\n      `https://nameless-wildwood-62426.herokuapp.com/api/project/delete/${GetId}`,\n      {\n        method: \"DELETE\",\n        body: JSON.stringify({ GetId }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\n        },\n      }\n    );\n  }, [GetId]);\n\n  const [TheId, setTheId] = useState(\"\");\n  const [NewGithub, setNewGithub] = useState(\"\");\n  const [NewCloudinary, setNewCloudinary] = useState(\"\");\n\n  function TargetId(id) {\n    setTheId(id);\n  }\n\n  useEffect(() => {\n    fetch(\n      `https://nameless-wildwood-62426.herokuapp.com/api/project/update/${TheId}`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify({ NewGithub, NewCloudinary }),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\n        },\n      }\n    );\n  }, [TheId]);\n\n  return (\n    <div>\n      <div className=\"MyProjetcs\">\n        {data.data.map((element, index) => {\n          return (\n            <div key={index} className=\"MyProject\">\n              <img\n                className=\"MyProject__Image\"\n                src={element.cloudinary}\n                alt=\"mes projets\"\n              />\n              <div className=\"Button\">\n                <a className=\"Button__Link\" href={element.github}>\n                  Open\n                </a>\n                <button\n                  className=\"Button__Link\"\n                  onClick={() => handleClick(element.id)}\n                >\n                  Delete\n                </button>\n\n                <button className=\"Button__Link\">Modify</button>\n\n                <div className=\"Modify\">\n                  <label>Github</label>\n                  <input\n                    type=\"url\"\n                    onChange={(e) => setNewGithub(e.target.value)}\n                  />\n                  <label>Cloudinary</label>\n                  <input\n                    type=\"url\"\n                    onChange={(e) => setNewCloudinary(e.target.value)}\n                  />\n                  <button onClick={() => TargetId(element.id)}>Update</button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Form from \"./Components/Form/Form.jsx\";\nimport Projects from \"./Components/Projects/Projects.jsx\";\n\nfunction App() {\n  const [Project, setProject] = useState([]);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_PROJECT}`, { method: \"GET\" })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (data) {\n        setProject(data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Back Office Portfolio CMS</h1>\n      <h2>Add More Projects</h2>\n      <Form />\n      <h2>All my projects</h2>\n      <Projects data={Project} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}